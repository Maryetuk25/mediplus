name: CI - Build and Deploy Docker Image to ECR

on:
  push:

jobs:
  build-push:
    name: Build & Push to Amazon ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin 077058346391.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker image
        run: |
          IMAGE_URI=077058346391.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mediplus:${{ github.run_number }}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-push

    steps:
      - name: Deploy on EC2 instance
        run: |
          echo "${{ secrets.SSH_KEY }}" > key2.pem
          chmod 600 key2.pem

          ssh -o StrictHostKeyChecking=no -i key2.pem ${{ secrets.USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e

            echo "🔑 Logging into ECR..."
            aws ecr get-login-password --region us-east-1 \
              | docker login --username AWS --password-stdin 077058346391.dkr.ecr.us-east-1.amazonaws.com

            echo "📦 Pulling latest Docker image..."
            docker pull 077058346391.dkr.ecr.us-east-1.amazonaws.com/mediplus:${{ github.run_number }}

            echo "🧹 Cleaning up old container..."
            docker rm -f mediplus || true

            echo "🚀 Running new container..."
            docker run -d --name mediplus -p 80:80 077058346391.dkr.ecr.us-east-1.amazonaws.com/mediplus:${{ github.run_number }}

            echo "✅ Deployment completed successfully!"
          EOF

      - name: Notify Slack (Success)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"✅ Deployment successful for mediplus (Run #${{ github.run_number }})! 🚀\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (Failure)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"❌ Deployment failed for mediplus (Run #${{ github.run_number }})! Please check logs.\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}